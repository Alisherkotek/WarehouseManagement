@* WarehouseManagement.Blazor/Components/Dialogs/ResourceDialog.razor *@
@using WarehouseManagement.Blazor.Models
@using WarehouseManagement.Blazor.Services
@inject IWarehouseService WarehouseService
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudTextField @bind-Value="model.Name" Label="Наименование" Required="true" Variant="Variant.Outlined"/>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Отмена</MudButton>
        <MudButton Color="Color.Success" OnClick="Submit">Сохранить</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = null!;
    [Parameter] public ResourceDto? Resource { get; set; }

    private ResourceFormModel model = new();

    protected override void OnInitialized()
    {
        if (Resource != null)
        {
            model.Name = Resource.Name;
        }
    }

    private async Task Submit()
    {
        if (string.IsNullOrWhiteSpace(model.Name))
        {
            Snackbar.Add("Введите наименование", Severity.Warning);
            return;
        }

        try
        {
            if (Resource == null)
            {
                var dto = new CreateResourceDto { Name = model.Name };
                var result = await WarehouseService.CreateResourceAsync(dto);
                if (result != null)
                {
                    Snackbar.Add("Ресурс добавлен", Severity.Success);
                    MudDialog.Close(DialogResult.Ok(result));
                }
                else
                {
                    Snackbar.Add("Ошибка при добавлении - возможно такое имя уже существует", Severity.Error);
                }
            }
            else
            {
                var dto = new UpdateResourceDto
                {
                    Name = model.Name,
                    IsArchived = Resource.IsArchived
                };
                var result = await WarehouseService.UpdateResourceAsync(Resource.Id, dto);
                if (result != null)
                {
                    Snackbar.Add("Ресурс обновлен", Severity.Success);
                    MudDialog.Close(DialogResult.Ok(result));
                }
                else
                {
                    Snackbar.Add("Ошибка при обновлении", Severity.Error);
                }
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Ошибка: {ex.Message}", Severity.Error);
        }
    }

    private void Cancel() => MudDialog.Cancel();

    private class ResourceFormModel
    {
        public string Name { get; set; } = string.Empty;
    }

}